// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapShot 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#120311",
        "flexDirection": "row",
        "height": 60,
        "justifyContent": "space-between",
        "paddingHorizontal": 50,
      },
      false,
    ]
  }
  testID="topBar"
>
  <Text
    style={
      Array [
        Object {
          "color": "#f0edf6",
          "fontSize": 25,
        },
        Object {
          "fontSize": 20,
        },
      ]
    }
  >
    Random Person
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(231, 231, 231)",
            "borderTopLeftRadius": 4,
            "borderTopRightRadius": 4,
          },
          Object {
            "borderRadius": 5,
            "marginLeft": 20,
            "marginRight": 30,
            "width": 200,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "rgba(0, 0, 0, 0.26)",
            "bottom": 0,
            "height": 2,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "transform": Array [
              Object {
                "scaleY": 0.5,
              },
            ],
            "zIndex": 1,
          }
        }
      />
      <View
        style={
          Array [
            Object {
              "paddingBottom": 0,
              "paddingTop": 0,
            },
            Object {
              "minHeight": 40,
            },
          ]
        }
      >
        <TextInput
          editable={true}
          maxFontSizeMultiplier={1.5}
          multiline={false}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder="Search name"
          placeholderTextColor="rgba(0, 0, 0, 0.54)"
          selectionColor="transparent"
          style={
            Array [
              Object {
                "flexGrow": 1,
                "margin": 0,
              },
              Object {
                "paddingLeft": 12,
                "paddingRight": 12,
              },
              Object {
                "height": 40,
              },
              Object {
                "paddingBottom": 0,
                "paddingTop": 0,
              },
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontSize": 16,
                "fontWeight": undefined,
                "textAlign": "left",
                "textAlignVertical": "center",
              },
              false,
              Array [
                Object {},
              ],
            ]
          }
          testID="searchBox"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 15,
              "height": 30,
              "width": 30,
            },
            false,
            Array [
              Object {
                "marginLeft": 0,
                "marginRight": 30,
              },
              false,
            ],
          ],
        ]
      }
      testID="refreshBtn"
    >
      <View>
        <Text />
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 15,
              "height": 30,
              "width": 30,
            },
            false,
            Array [
              Object {
                "marginLeft": 0,
                "marginRight": 30,
              },
              false,
            ],
          ],
        ]
      }
      testID="switchBtn"
    >
      <View>
        <Text />
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="logoutButton"
    >
      <Text
        style={
          Object {
            "color": "#f0edf6",
            "fontSize": 18,
            "textDecorationLine": "underline",
          }
        }
      >
        logout
      </Text>
    </View>
  </View>
</View>
`;
